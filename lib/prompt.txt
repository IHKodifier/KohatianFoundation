ok lets start some pair programming. modify my UserAvatarOverlayChild so that 
it signs out the user on logout button
it navigates to the scaffolded ConsumerStatefWidget named AdminCenter. Then you will write code AdminCenter 
The AdminCenter is a Scafollded  Widget with a CustomScrollView in the body. slivers in the CustomSliverView include AppBarWidgetAdminCenterCore and SiteFooter
Next you will write the AdminCenterCore as a SliverToBoxAdapter whoose child grows and shrinks depending upon it contents 
The contents have three Cards for creation of an Entry model Class, EntryCoordinator  setting and other settings
rewrite the UserAvatarOverlayChild widgetElevatedButtons for Logout and AdminCenter are already there inside tge cards's trailing widget impement functionality on those ElevatedButtons
write an Adapation of AppBarWidget whichwill be a nonsliver version of the sliver based AppBarWidget. ignore the flexiblespacebar things. a simple adapatation of AppBar()
next up we are going to create the contents for createEntryCard, createEntryCoordinatorsCard and otherSettingsCard.give them suitable names. The content of CreateEntryCard is a Stepper widget of 3 steps. step 1 has textformfields for entry_name, entrynumber,entry_strength(which is integer), start and endDate, entry_title(optional to fill), and entry_slogan(optional to fill) with all the texteditingcontrollers, validation and save/submit logic . each step of the stepper has its own formkey so the entry can be partially saved from the data input by user  on each step. moving forward to step 2 triggers the action of saving the current Entry into the firestore.instance.collection('entries). in step 2 of the stepper, the step presents user to choose between a centered button (which is also a drag target for drag and droping file ) for selecting .xlsx file for uploading or another button  create blank Cadets in the  created entry depending upon the number entered as  strength in step1.  all the cadets will be created in a 'cadets' sub collection of the actual Entry's firestore document. step just like step 2, step 3 is also optional and can be skipped if the user wants to  step3 presents the user  to choose various cadet from within the created entry fo certain distinctions they received such as  bestCadet, bestStudent, bestSportman, bestGymnast, bestDrillCommander, bestRider, bestTentpegger, bestSwimmer, bestShooter, bestQari, bestDebatorUrdu, bestDebatorEnglish, bestEssayWriterUrdu, bestEssayWriterEnglish,  bestArtist, etc.
i have always faced a confusion ever since i started flutter.Lets say i have a  scaffolded widget  named A with custom scollview content in body.let the content widget be named B.  the B widget  has a button to invoke /make visible  a form with with textformfields and their respective controllers etc and may have an  upload file upload etc in the content. the form's save and reset buttons sare inside the form widget B. the form B needs to perform the vaildations etc.  ipon successfull form validation  it needs to write  the data to a firestore doc. The  Widget A needs to know whether the  firestore write whether  progress and was sucessful or not. to wire up this whole setup, which of A and B widget  needs to strictly Stateful? should i declare my text editing controllers in widget A and then pass them on to B  in constructor? suppose widget B is to have mutiple distinct forms with distinct formkey how should i wire this up  